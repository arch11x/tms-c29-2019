Task 1
Вход на вечеринку только по списку.
Есть список имен (коллекция). Пользователь вводит с консоли свое имя, а программа проверяет его наличие в списке,
после чего говорит может он пройти или нет

Task 2
Создайте целочисленный ArrayList. Заполните его 100 элементами, добавляя каждый новый элемент в начало списка и выведите на экран.
Затем удалите из него все четные элементы. И снова выведите на экран

Task 3
Есть две коллекции, нужно удалить из первой те, которые есть во второй

Task 4
Есть две коллекции, нужно оставить в первой только те, которые есть во второй

Task 5
Есть ArrayList и LinkedList на 100К одинаковых элементов.
Нужно написать бенчмарк, который бы показал скорость удаления из СЕРЕДИНЫ у двух этих листов
Удалить нужно все элементы

Task 6
Есть ArrayList и LinkedList на 100К одинаковых элементов.
Нужно написать бенчмарк, который бы показал скорость удаления из НАЧАЛА у двух этих листов
Удалить нужно все элементы

Task 7
Есть TreeSet чисел, нужно отсортировать его в обратном порядке

Task 8
Есть HashSet магазинов. У магазина есть название и ID. Создать несколько магазинов (через оператор new Shop(..))
с одинаковым ID и названием и добавить их в ваш Set. Попробуйте разобраться почему они все добавились,
несмотря на то, что Set обеспечивает уникальность

Task 9
Есть TreeSet<Student>. Заполните его списком студентов. Если получили исключение, вспомните про интерфейс Comparable или Comparator

Task 10
Есть неупорядоченный склад с фруктами (допустим это List<Fruits>). У фрукта есть название и кол-во в кг.
Нужно произвести переучет и выяснить общее кол-во килограмм каждого из фруктов.
Попробуйте в качестве учетного журнала использовать HashMap или TreeMap

Task 11
Есть TreeSet имен, необходимо выбрать все от "H" до "W" (regex (регэксп))